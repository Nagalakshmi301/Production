version: 0.2

env:
  variables:
    AWS_REGION: eu-north-1
    FRONTEND_REPO: 890742562729.dkr.ecr.eu-north-1.amazonaws.com/production-frontend
    BACKEND_REPO: 890742562729.dkr.ecr.eu-north-1.amazonaws.com/production-backend
    EC2_USER: ubuntu
    EC2_IP: 13.60.239.64
    SECRET_NAME: ec2/ssh/private-key
    SSH_KEY_PATH: /root/.ssh/ec2-key.pem

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $FRONTEND_REPO
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $BACKEND_REPO
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

      - echo Installing jq...
      - yum install -y jq

      - echo Retrieving SSH key from Secrets Manager...
      - mkdir -p /root/.ssh
      - aws secretsmanager get-secret-value --secret-id $SECRET_NAME --query SecretString --output text | jq -r '.["private-key"]' > $SSH_KEY_PATH
      - chmod 400 $SSH_KEY_PATH

      # Check if the SSH key file exists
      - echo Checking if SSH key file exists...
      - if [ -f $SSH_KEY_PATH ]; then echo "SSH key exists."; else echo "SSH key missing!" && exit 1; fi

  build:
    commands:
      - echo Building frontend image...
      - docker build -t $FRONTEND_REPO:$IMAGE_TAG ./frontend
      - echo Building backend image...
      - docker build -t $BACKEND_REPO:$IMAGE_TAG ./backend

  post_build:
    commands:
      - echo Pushing frontend image...
      - docker push $FRONTEND_REPO:$IMAGE_TAG
      - echo Pushing backend image...
      - docker push $BACKEND_REPO:$IMAGE_TAG

      - echo Writing imagedefinitions.json...
      - printf '[{"name":"frontend","imageUri":"%s"},{"name":"backend","imageUri":"%s"}]' $FRONTEND_REPO:$IMAGE_TAG $BACKEND_REPO:$IMAGE_TAG > imagedefinitions.json

      - echo Deploying via SSH to EC2...
      - |
        ssh -o StrictHostKeyChecking=no -i $SSH_KEY_PATH $EC2_USER@$EC2_IP << 'EOF'
        echo Logging in to ECR on EC2...
        aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 890742562729.dkr.ecr.eu-north-1.amazonaws.com

        echo Pulling latest images...
        docker pull 890742562729.dkr.ecr.eu-north-1.amazonaws.com/production-frontend:$IMAGE_TAG
        docker pull 890742562729.dkr.ecr.eu-north-1.amazonaws.com/production-backend:$IMAGE_TAG

        echo Stopping and removing old containers...
        docker rm -f frontend || true
        docker rm -f backend || true

        echo Starting new containers...
        docker run -d -p 8080:8080 --name frontend 890742562729.dkr.ecr.eu-north-1.amazonaws.com/production-frontend:$IMAGE_TAG
        docker run -d -p 5000:5000 --name backend 890742562729.dkr.ecr.eu-north-1.amazonaws.com/production-backend:$IMAGE_TAG
        EOF

artifacts:
  files:
    - imagedefinitions.json
